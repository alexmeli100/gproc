syntax = "proto3";

package pb;


service WorkerService {
  rpc Start        (JobRequest         ) returns (JobStatus       ) {}
  rpc Status       (StatusRequest      ) returns (JobStatus       ) {}
  rpc Stop         (StopRequest        ) returns (JobStatus       ) {}
  rpc GetOutput    (GetOutputRequest   ) returns (stream JobOutput) {}
}

message StatusRequest {
  string id = 1;
}

message StopRequest {
  string id = 1;
}

message GetOutputRequest {
  string id = 1;
}

message JobOutput {
  bytes          output = 1;
  OutputChannel channel = 2;
}

message JobRequest {
  string cmd           = 1;
  repeated string args = 2;
}

message JobStatus {
  string id              = 1; // the id of the job
  int64 PID              = 2; // the process id of the process running in the system
  string cmd             = 3; // a single string containing the full command and arguments passed in the job request
  JobState state         = 4; // the current state of the process
  int64 exitCode         = 5; // the exit code of the process
  string error           = 6; // the error if any, when the process reached a final state
  int64 startTime        = 7;
  int64 stopTime         = 8;
  bool stopByUser        = 9;
}

enum OutputChannel {
  StdOut = 0;
  StdErr = 1;
}

enum JobState {
  Running     = 0; // process is running
  Finished    = 1; // process has finished running
  Fatal       = 2; // process failed to start
}
